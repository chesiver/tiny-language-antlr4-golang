// Code generated from ./grammar/TinyLanguage.g4 by ANTLR 4.8. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 29, 193,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3,
	5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3,
	8, 3, 8, 3, 8, 3, 8, 3, 9, 3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10,
	3, 11, 3, 11, 3, 11, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3,
	13, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14,
	3, 14, 3, 14, 5, 14, 115, 10, 14, 3, 15, 3, 15, 3, 15, 7, 15, 120, 10,
	15, 12, 15, 14, 15, 123, 11, 15, 5, 15, 125, 10, 15, 3, 16, 3, 16, 7, 16,
	129, 10, 16, 12, 16, 14, 16, 132, 11, 16, 3, 17, 3, 17, 3, 17, 3, 17, 7,
	17, 138, 10, 17, 12, 17, 14, 17, 141, 11, 17, 3, 17, 3, 17, 3, 17, 3, 17,
	3, 17, 7, 17, 148, 10, 17, 12, 17, 14, 17, 151, 11, 17, 3, 17, 5, 17, 154,
	10, 17, 3, 18, 3, 18, 3, 18, 3, 18, 3, 19, 3, 19, 7, 19, 162, 10, 19, 12,
	19, 14, 19, 165, 11, 19, 3, 19, 5, 19, 168, 10, 19, 3, 20, 3, 20, 3, 21,
	3, 21, 3, 22, 3, 22, 3, 23, 3, 23, 3, 24, 3, 24, 3, 25, 3, 25, 3, 26, 3,
	26, 3, 27, 3, 27, 3, 27, 3, 28, 3, 28, 3, 28, 3, 29, 3, 29, 3, 30, 3, 30,
	2, 2, 31, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11,
	21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 2,
	39, 2, 41, 20, 43, 21, 45, 22, 47, 23, 49, 24, 51, 25, 53, 26, 55, 27,
	57, 28, 59, 29, 3, 2, 12, 4, 2, 67, 92, 99, 124, 6, 2, 50, 59, 67, 92,
	97, 97, 99, 124, 3, 2, 36, 36, 6, 2, 12, 12, 15, 15, 36, 36, 94, 94, 4,
	2, 12, 12, 15, 15, 3, 2, 41, 41, 6, 2, 12, 12, 15, 15, 41, 41, 94, 94,
	5, 2, 11, 12, 14, 15, 34, 34, 3, 2, 51, 59, 3, 2, 50, 59, 2, 201, 2, 3,
	3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11,
	3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2,
	19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2,
	2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2,
	2, 2, 35, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2,
	2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3,
	2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2, 2, 2, 3, 61,
	3, 2, 2, 2, 5, 63, 3, 2, 2, 2, 7, 65, 3, 2, 2, 2, 9, 67, 3, 2, 2, 2, 11,
	69, 3, 2, 2, 2, 13, 71, 3, 2, 2, 2, 15, 79, 3, 2, 2, 2, 17, 83, 3, 2, 2,
	2, 19, 86, 3, 2, 2, 2, 21, 91, 3, 2, 2, 2, 23, 94, 3, 2, 2, 2, 25, 101,
	3, 2, 2, 2, 27, 114, 3, 2, 2, 2, 29, 116, 3, 2, 2, 2, 31, 126, 3, 2, 2,
	2, 33, 153, 3, 2, 2, 2, 35, 155, 3, 2, 2, 2, 37, 167, 3, 2, 2, 2, 39, 169,
	3, 2, 2, 2, 41, 171, 3, 2, 2, 2, 43, 173, 3, 2, 2, 2, 45, 175, 3, 2, 2,
	2, 47, 177, 3, 2, 2, 2, 49, 179, 3, 2, 2, 2, 51, 181, 3, 2, 2, 2, 53, 183,
	3, 2, 2, 2, 55, 186, 3, 2, 2, 2, 57, 189, 3, 2, 2, 2, 59, 191, 3, 2, 2,
	2, 61, 62, 7, 61, 2, 2, 62, 4, 3, 2, 2, 2, 63, 64, 7, 63, 2, 2, 64, 6,
	3, 2, 2, 2, 65, 66, 7, 42, 2, 2, 66, 8, 3, 2, 2, 2, 67, 68, 7, 43, 2, 2,
	68, 10, 3, 2, 2, 2, 69, 70, 7, 46, 2, 2, 70, 12, 3, 2, 2, 2, 71, 72, 7,
	114, 2, 2, 72, 73, 7, 116, 2, 2, 73, 74, 7, 107, 2, 2, 74, 75, 7, 112,
	2, 2, 75, 76, 7, 118, 2, 2, 76, 77, 7, 110, 2, 2, 77, 78, 7, 112, 2, 2,
	78, 14, 3, 2, 2, 2, 79, 80, 7, 102, 2, 2, 80, 81, 7, 103, 2, 2, 81, 82,
	7, 104, 2, 2, 82, 16, 3, 2, 2, 2, 83, 84, 7, 107, 2, 2, 84, 85, 7, 104,
	2, 2, 85, 18, 3, 2, 2, 2, 86, 87, 7, 103, 2, 2, 87, 88, 7, 110, 2, 2, 88,
	89, 7, 117, 2, 2, 89, 90, 7, 103, 2, 2, 90, 20, 3, 2, 2, 2, 91, 92, 7,
	102, 2, 2, 92, 93, 7, 113, 2, 2, 93, 22, 3, 2, 2, 2, 94, 95, 7, 116, 2,
	2, 95, 96, 7, 103, 2, 2, 96, 97, 7, 118, 2, 2, 97, 98, 7, 119, 2, 2, 98,
	99, 7, 116, 2, 2, 99, 100, 7, 112, 2, 2, 100, 24, 3, 2, 2, 2, 101, 102,
	7, 103, 2, 2, 102, 103, 7, 112, 2, 2, 103, 104, 7, 102, 2, 2, 104, 26,
	3, 2, 2, 2, 105, 106, 7, 118, 2, 2, 106, 107, 7, 116, 2, 2, 107, 108, 7,
	119, 2, 2, 108, 115, 7, 103, 2, 2, 109, 110, 7, 104, 2, 2, 110, 111, 7,
	99, 2, 2, 111, 112, 7, 110, 2, 2, 112, 113, 7, 117, 2, 2, 113, 115, 7,
	103, 2, 2, 114, 105, 3, 2, 2, 2, 114, 109, 3, 2, 2, 2, 115, 28, 3, 2, 2,
	2, 116, 124, 5, 37, 19, 2, 117, 121, 7, 48, 2, 2, 118, 120, 5, 39, 20,
	2, 119, 118, 3, 2, 2, 2, 120, 123, 3, 2, 2, 2, 121, 119, 3, 2, 2, 2, 121,
	122, 3, 2, 2, 2, 122, 125, 3, 2, 2, 2, 123, 121, 3, 2, 2, 2, 124, 117,
	3, 2, 2, 2, 124, 125, 3, 2, 2, 2, 125, 30, 3, 2, 2, 2, 126, 130, 9, 2,
	2, 2, 127, 129, 9, 3, 2, 2, 128, 127, 3, 2, 2, 2, 129, 132, 3, 2, 2, 2,
	130, 128, 3, 2, 2, 2, 130, 131, 3, 2, 2, 2, 131, 32, 3, 2, 2, 2, 132, 130,
	3, 2, 2, 2, 133, 139, 9, 4, 2, 2, 134, 138, 10, 5, 2, 2, 135, 136, 7, 94,
	2, 2, 136, 138, 10, 6, 2, 2, 137, 134, 3, 2, 2, 2, 137, 135, 3, 2, 2, 2,
	138, 141, 3, 2, 2, 2, 139, 137, 3, 2, 2, 2, 139, 140, 3, 2, 2, 2, 140,
	142, 3, 2, 2, 2, 141, 139, 3, 2, 2, 2, 142, 154, 9, 4, 2, 2, 143, 149,
	9, 7, 2, 2, 144, 148, 10, 8, 2, 2, 145, 146, 7, 94, 2, 2, 146, 148, 10,
	6, 2, 2, 147, 144, 3, 2, 2, 2, 147, 145, 3, 2, 2, 2, 148, 151, 3, 2, 2,
	2, 149, 147, 3, 2, 2, 2, 149, 150, 3, 2, 2, 2, 150, 152, 3, 2, 2, 2, 151,
	149, 3, 2, 2, 2, 152, 154, 9, 7, 2, 2, 153, 133, 3, 2, 2, 2, 153, 143,
	3, 2, 2, 2, 154, 34, 3, 2, 2, 2, 155, 156, 9, 9, 2, 2, 156, 157, 3, 2,
	2, 2, 157, 158, 8, 18, 2, 2, 158, 36, 3, 2, 2, 2, 159, 163, 9, 10, 2, 2,
	160, 162, 5, 39, 20, 2, 161, 160, 3, 2, 2, 2, 162, 165, 3, 2, 2, 2, 163,
	161, 3, 2, 2, 2, 163, 164, 3, 2, 2, 2, 164, 168, 3, 2, 2, 2, 165, 163,
	3, 2, 2, 2, 166, 168, 7, 50, 2, 2, 167, 159, 3, 2, 2, 2, 167, 166, 3, 2,
	2, 2, 168, 38, 3, 2, 2, 2, 169, 170, 9, 11, 2, 2, 170, 40, 3, 2, 2, 2,
	171, 172, 7, 96, 2, 2, 172, 42, 3, 2, 2, 2, 173, 174, 7, 45, 2, 2, 174,
	44, 3, 2, 2, 2, 175, 176, 7, 47, 2, 2, 176, 46, 3, 2, 2, 2, 177, 178, 7,
	44, 2, 2, 178, 48, 3, 2, 2, 2, 179, 180, 7, 49, 2, 2, 180, 50, 3, 2, 2,
	2, 181, 182, 7, 39, 2, 2, 182, 52, 3, 2, 2, 2, 183, 184, 7, 64, 2, 2, 184,
	185, 7, 63, 2, 2, 185, 54, 3, 2, 2, 2, 186, 187, 7, 62, 2, 2, 187, 188,
	7, 63, 2, 2, 188, 56, 3, 2, 2, 2, 189, 190, 7, 64, 2, 2, 190, 58, 3, 2,
	2, 2, 191, 192, 7, 62, 2, 2, 192, 60, 3, 2, 2, 2, 14, 2, 114, 121, 124,
	130, 137, 139, 147, 149, 153, 163, 167, 3, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "';'", "'='", "'('", "')'", "','", "'println'", "'def'", "'if'", "'else'",
	"'do'", "'return'", "'end'", "", "", "", "", "", "'^'", "'+'", "'-'", "'*'",
	"'/'", "'%'", "'>='", "'<='", "'>'", "'<'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "Println", "Def", "If", "Else", "Do", "Return",
	"End", "Bool", "Number", "Identifier", "StringLiteral", "Space", "Power",
	"Add", "Subtract", "Mult", "Divide", "Mod", "GTEquals", "LTEquals", "GT",
	"LT",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "Println", "Def", "If", "Else",
	"Do", "Return", "End", "Bool", "Number", "Identifier", "StringLiteral",
	"Space", "Int", "Digit", "Power", "Add", "Subtract", "Mult", "Divide",
	"Mod", "GTEquals", "LTEquals", "GT", "LT",
}

type TinyLanguageLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewTinyLanguageLexer(input antlr.CharStream) *TinyLanguageLexer {

	l := new(TinyLanguageLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "TinyLanguage.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// TinyLanguageLexer tokens.
const (
	TinyLanguageLexerT__0          = 1
	TinyLanguageLexerT__1          = 2
	TinyLanguageLexerT__2          = 3
	TinyLanguageLexerT__3          = 4
	TinyLanguageLexerT__4          = 5
	TinyLanguageLexerPrintln       = 6
	TinyLanguageLexerDef           = 7
	TinyLanguageLexerIf            = 8
	TinyLanguageLexerElse          = 9
	TinyLanguageLexerDo            = 10
	TinyLanguageLexerReturn        = 11
	TinyLanguageLexerEnd           = 12
	TinyLanguageLexerBool          = 13
	TinyLanguageLexerNumber        = 14
	TinyLanguageLexerIdentifier    = 15
	TinyLanguageLexerStringLiteral = 16
	TinyLanguageLexerSpace         = 17
	TinyLanguageLexerPower         = 18
	TinyLanguageLexerAdd           = 19
	TinyLanguageLexerSubtract      = 20
	TinyLanguageLexerMult          = 21
	TinyLanguageLexerDivide        = 22
	TinyLanguageLexerMod           = 23
	TinyLanguageLexerGTEquals      = 24
	TinyLanguageLexerLTEquals      = 25
	TinyLanguageLexerGT            = 26
	TinyLanguageLexerLT            = 27
)
