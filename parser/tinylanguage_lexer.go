// Code generated from ./grammar/TinyLanguage.g4 by ANTLR 4.8. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 38, 240,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6,
	3, 7, 3, 7, 3, 8, 3, 8, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9,
	3, 10, 3, 10, 3, 10, 3, 10, 3, 11, 3, 11, 3, 11, 3, 12, 3, 12, 3, 12, 3,
	12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14,
	3, 14, 3, 15, 3, 15, 3, 15, 3, 15, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3,
	16, 3, 17, 3, 17, 3, 17, 3, 18, 3, 18, 3, 18, 3, 18, 3, 19, 3, 19, 3, 19,
	3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 5, 19, 150, 10, 19, 3, 20, 3,
	20, 3, 20, 7, 20, 155, 10, 20, 12, 20, 14, 20, 158, 11, 20, 5, 20, 160,
	10, 20, 3, 21, 3, 21, 7, 21, 164, 10, 21, 12, 21, 14, 21, 167, 11, 21,
	3, 22, 3, 22, 3, 22, 3, 22, 7, 22, 173, 10, 22, 12, 22, 14, 22, 176, 11,
	22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 7, 22, 183, 10, 22, 12, 22, 14,
	22, 186, 11, 22, 3, 22, 5, 22, 189, 10, 22, 3, 23, 3, 23, 3, 23, 3, 23,
	3, 24, 3, 24, 7, 24, 197, 10, 24, 12, 24, 14, 24, 200, 11, 24, 3, 24, 5,
	24, 203, 10, 24, 3, 25, 3, 25, 3, 26, 3, 26, 3, 26, 3, 27, 3, 27, 3, 27,
	3, 28, 3, 28, 3, 28, 3, 29, 3, 29, 3, 29, 3, 30, 3, 30, 3, 30, 3, 31, 3,
	31, 3, 31, 3, 32, 3, 32, 3, 33, 3, 33, 3, 34, 3, 34, 3, 35, 3, 35, 3, 36,
	3, 36, 3, 37, 3, 37, 3, 38, 3, 38, 3, 39, 3, 39, 2, 2, 40, 3, 3, 5, 4,
	7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14,
	27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 22, 43, 23,
	45, 24, 47, 2, 49, 2, 51, 25, 53, 26, 55, 27, 57, 28, 59, 29, 61, 30, 63,
	31, 65, 32, 67, 33, 69, 34, 71, 35, 73, 36, 75, 37, 77, 38, 3, 2, 12, 4,
	2, 67, 92, 99, 124, 6, 2, 50, 59, 67, 92, 97, 97, 99, 124, 3, 2, 36, 36,
	6, 2, 12, 12, 15, 15, 36, 36, 94, 94, 4, 2, 12, 12, 15, 15, 3, 2, 41, 41,
	6, 2, 12, 12, 15, 15, 41, 41, 94, 94, 5, 2, 11, 12, 14, 15, 34, 34, 3,
	2, 51, 59, 3, 2, 50, 59, 2, 248, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2,
	7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2,
	2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2,
	2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2,
	2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3,
	2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45,
	3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2,
	57, 3, 2, 2, 2, 2, 59, 3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2,
	2, 65, 3, 2, 2, 2, 2, 67, 3, 2, 2, 2, 2, 69, 3, 2, 2, 2, 2, 71, 3, 2, 2,
	2, 2, 73, 3, 2, 2, 2, 2, 75, 3, 2, 2, 2, 2, 77, 3, 2, 2, 2, 3, 79, 3, 2,
	2, 2, 5, 81, 3, 2, 2, 2, 7, 83, 3, 2, 2, 2, 9, 85, 3, 2, 2, 2, 11, 87,
	3, 2, 2, 2, 13, 89, 3, 2, 2, 2, 15, 91, 3, 2, 2, 2, 17, 93, 3, 2, 2, 2,
	19, 101, 3, 2, 2, 2, 21, 105, 3, 2, 2, 2, 23, 108, 3, 2, 2, 2, 25, 113,
	3, 2, 2, 2, 27, 116, 3, 2, 2, 2, 29, 123, 3, 2, 2, 2, 31, 127, 3, 2, 2,
	2, 33, 133, 3, 2, 2, 2, 35, 136, 3, 2, 2, 2, 37, 149, 3, 2, 2, 2, 39, 151,
	3, 2, 2, 2, 41, 161, 3, 2, 2, 2, 43, 188, 3, 2, 2, 2, 45, 190, 3, 2, 2,
	2, 47, 202, 3, 2, 2, 2, 49, 204, 3, 2, 2, 2, 51, 206, 3, 2, 2, 2, 53, 209,
	3, 2, 2, 2, 55, 212, 3, 2, 2, 2, 57, 215, 3, 2, 2, 2, 59, 218, 3, 2, 2,
	2, 61, 221, 3, 2, 2, 2, 63, 224, 3, 2, 2, 2, 65, 226, 3, 2, 2, 2, 67, 228,
	3, 2, 2, 2, 69, 230, 3, 2, 2, 2, 71, 232, 3, 2, 2, 2, 73, 234, 3, 2, 2,
	2, 75, 236, 3, 2, 2, 2, 77, 238, 3, 2, 2, 2, 79, 80, 7, 61, 2, 2, 80, 4,
	3, 2, 2, 2, 81, 82, 7, 63, 2, 2, 82, 6, 3, 2, 2, 2, 83, 84, 7, 42, 2, 2,
	84, 8, 3, 2, 2, 2, 85, 86, 7, 43, 2, 2, 86, 10, 3, 2, 2, 2, 87, 88, 7,
	46, 2, 2, 88, 12, 3, 2, 2, 2, 89, 90, 7, 93, 2, 2, 90, 14, 3, 2, 2, 2,
	91, 92, 7, 95, 2, 2, 92, 16, 3, 2, 2, 2, 93, 94, 7, 114, 2, 2, 94, 95,
	7, 116, 2, 2, 95, 96, 7, 107, 2, 2, 96, 97, 7, 112, 2, 2, 97, 98, 7, 118,
	2, 2, 98, 99, 7, 110, 2, 2, 99, 100, 7, 112, 2, 2, 100, 18, 3, 2, 2, 2,
	101, 102, 7, 102, 2, 2, 102, 103, 7, 103, 2, 2, 103, 104, 7, 104, 2, 2,
	104, 20, 3, 2, 2, 2, 105, 106, 7, 107, 2, 2, 106, 107, 7, 104, 2, 2, 107,
	22, 3, 2, 2, 2, 108, 109, 7, 103, 2, 2, 109, 110, 7, 110, 2, 2, 110, 111,
	7, 117, 2, 2, 111, 112, 7, 103, 2, 2, 112, 24, 3, 2, 2, 2, 113, 114, 7,
	102, 2, 2, 114, 115, 7, 113, 2, 2, 115, 26, 3, 2, 2, 2, 116, 117, 7, 116,
	2, 2, 117, 118, 7, 103, 2, 2, 118, 119, 7, 118, 2, 2, 119, 120, 7, 119,
	2, 2, 120, 121, 7, 116, 2, 2, 121, 122, 7, 112, 2, 2, 122, 28, 3, 2, 2,
	2, 123, 124, 7, 104, 2, 2, 124, 125, 7, 113, 2, 2, 125, 126, 7, 116, 2,
	2, 126, 30, 3, 2, 2, 2, 127, 128, 7, 121, 2, 2, 128, 129, 7, 106, 2, 2,
	129, 130, 7, 107, 2, 2, 130, 131, 7, 110, 2, 2, 131, 132, 7, 103, 2, 2,
	132, 32, 3, 2, 2, 2, 133, 134, 7, 118, 2, 2, 134, 135, 7, 113, 2, 2, 135,
	34, 3, 2, 2, 2, 136, 137, 7, 103, 2, 2, 137, 138, 7, 112, 2, 2, 138, 139,
	7, 102, 2, 2, 139, 36, 3, 2, 2, 2, 140, 141, 7, 118, 2, 2, 141, 142, 7,
	116, 2, 2, 142, 143, 7, 119, 2, 2, 143, 150, 7, 103, 2, 2, 144, 145, 7,
	104, 2, 2, 145, 146, 7, 99, 2, 2, 146, 147, 7, 110, 2, 2, 147, 148, 7,
	117, 2, 2, 148, 150, 7, 103, 2, 2, 149, 140, 3, 2, 2, 2, 149, 144, 3, 2,
	2, 2, 150, 38, 3, 2, 2, 2, 151, 159, 5, 47, 24, 2, 152, 156, 7, 48, 2,
	2, 153, 155, 5, 49, 25, 2, 154, 153, 3, 2, 2, 2, 155, 158, 3, 2, 2, 2,
	156, 154, 3, 2, 2, 2, 156, 157, 3, 2, 2, 2, 157, 160, 3, 2, 2, 2, 158,
	156, 3, 2, 2, 2, 159, 152, 3, 2, 2, 2, 159, 160, 3, 2, 2, 2, 160, 40, 3,
	2, 2, 2, 161, 165, 9, 2, 2, 2, 162, 164, 9, 3, 2, 2, 163, 162, 3, 2, 2,
	2, 164, 167, 3, 2, 2, 2, 165, 163, 3, 2, 2, 2, 165, 166, 3, 2, 2, 2, 166,
	42, 3, 2, 2, 2, 167, 165, 3, 2, 2, 2, 168, 174, 9, 4, 2, 2, 169, 173, 10,
	5, 2, 2, 170, 171, 7, 94, 2, 2, 171, 173, 10, 6, 2, 2, 172, 169, 3, 2,
	2, 2, 172, 170, 3, 2, 2, 2, 173, 176, 3, 2, 2, 2, 174, 172, 3, 2, 2, 2,
	174, 175, 3, 2, 2, 2, 175, 177, 3, 2, 2, 2, 176, 174, 3, 2, 2, 2, 177,
	189, 9, 4, 2, 2, 178, 184, 9, 7, 2, 2, 179, 183, 10, 8, 2, 2, 180, 181,
	7, 94, 2, 2, 181, 183, 10, 6, 2, 2, 182, 179, 3, 2, 2, 2, 182, 180, 3,
	2, 2, 2, 183, 186, 3, 2, 2, 2, 184, 182, 3, 2, 2, 2, 184, 185, 3, 2, 2,
	2, 185, 187, 3, 2, 2, 2, 186, 184, 3, 2, 2, 2, 187, 189, 9, 7, 2, 2, 188,
	168, 3, 2, 2, 2, 188, 178, 3, 2, 2, 2, 189, 44, 3, 2, 2, 2, 190, 191, 9,
	9, 2, 2, 191, 192, 3, 2, 2, 2, 192, 193, 8, 23, 2, 2, 193, 46, 3, 2, 2,
	2, 194, 198, 9, 10, 2, 2, 195, 197, 5, 49, 25, 2, 196, 195, 3, 2, 2, 2,
	197, 200, 3, 2, 2, 2, 198, 196, 3, 2, 2, 2, 198, 199, 3, 2, 2, 2, 199,
	203, 3, 2, 2, 2, 200, 198, 3, 2, 2, 2, 201, 203, 7, 50, 2, 2, 202, 194,
	3, 2, 2, 2, 202, 201, 3, 2, 2, 2, 203, 48, 3, 2, 2, 2, 204, 205, 9, 11,
	2, 2, 205, 50, 3, 2, 2, 2, 206, 207, 7, 126, 2, 2, 207, 208, 7, 126, 2,
	2, 208, 52, 3, 2, 2, 2, 209, 210, 7, 40, 2, 2, 210, 211, 7, 40, 2, 2, 211,
	54, 3, 2, 2, 2, 212, 213, 7, 63, 2, 2, 213, 214, 7, 63, 2, 2, 214, 56,
	3, 2, 2, 2, 215, 216, 7, 35, 2, 2, 216, 217, 7, 63, 2, 2, 217, 58, 3, 2,
	2, 2, 218, 219, 7, 64, 2, 2, 219, 220, 7, 63, 2, 2, 220, 60, 3, 2, 2, 2,
	221, 222, 7, 62, 2, 2, 222, 223, 7, 63, 2, 2, 223, 62, 3, 2, 2, 2, 224,
	225, 7, 96, 2, 2, 225, 64, 3, 2, 2, 2, 226, 227, 7, 45, 2, 2, 227, 66,
	3, 2, 2, 2, 228, 229, 7, 47, 2, 2, 229, 68, 3, 2, 2, 2, 230, 231, 7, 44,
	2, 2, 231, 70, 3, 2, 2, 2, 232, 233, 7, 49, 2, 2, 233, 72, 3, 2, 2, 2,
	234, 235, 7, 39, 2, 2, 235, 74, 3, 2, 2, 2, 236, 237, 7, 64, 2, 2, 237,
	76, 3, 2, 2, 2, 238, 239, 7, 62, 2, 2, 239, 78, 3, 2, 2, 2, 14, 2, 149,
	156, 159, 165, 172, 174, 182, 184, 188, 198, 202, 3, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "';'", "'='", "'('", "')'", "','", "'['", "']'", "'println'", "'def'",
	"'if'", "'else'", "'do'", "'return'", "'for'", "'while'", "'to'", "'end'",
	"", "", "", "", "", "'||'", "'&&'", "'=='", "'!='", "'>='", "'<='", "'^'",
	"'+'", "'-'", "'*'", "'/'", "'%'", "'>'", "'<'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "Println", "Def", "If", "Else", "Do", "Return",
	"For", "While", "To", "End", "Bool", "Number", "Identifier", "StringLiteral",
	"Space", "Or", "And", "Equals", "NEquals", "GTEquals", "LTEquals", "Power",
	"Add", "Subtract", "Mult", "Divide", "Mod", "GT", "LT",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "Println", "Def",
	"If", "Else", "Do", "Return", "For", "While", "To", "End", "Bool", "Number",
	"Identifier", "StringLiteral", "Space", "Int", "Digit", "Or", "And", "Equals",
	"NEquals", "GTEquals", "LTEquals", "Power", "Add", "Subtract", "Mult",
	"Divide", "Mod", "GT", "LT",
}

type TinyLanguageLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewTinyLanguageLexer(input antlr.CharStream) *TinyLanguageLexer {

	l := new(TinyLanguageLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "TinyLanguage.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// TinyLanguageLexer tokens.
const (
	TinyLanguageLexerT__0          = 1
	TinyLanguageLexerT__1          = 2
	TinyLanguageLexerT__2          = 3
	TinyLanguageLexerT__3          = 4
	TinyLanguageLexerT__4          = 5
	TinyLanguageLexerT__5          = 6
	TinyLanguageLexerT__6          = 7
	TinyLanguageLexerPrintln       = 8
	TinyLanguageLexerDef           = 9
	TinyLanguageLexerIf            = 10
	TinyLanguageLexerElse          = 11
	TinyLanguageLexerDo            = 12
	TinyLanguageLexerReturn        = 13
	TinyLanguageLexerFor           = 14
	TinyLanguageLexerWhile         = 15
	TinyLanguageLexerTo            = 16
	TinyLanguageLexerEnd           = 17
	TinyLanguageLexerBool          = 18
	TinyLanguageLexerNumber        = 19
	TinyLanguageLexerIdentifier    = 20
	TinyLanguageLexerStringLiteral = 21
	TinyLanguageLexerSpace         = 22
	TinyLanguageLexerOr            = 23
	TinyLanguageLexerAnd           = 24
	TinyLanguageLexerEquals        = 25
	TinyLanguageLexerNEquals       = 26
	TinyLanguageLexerGTEquals      = 27
	TinyLanguageLexerLTEquals      = 28
	TinyLanguageLexerPower         = 29
	TinyLanguageLexerAdd           = 30
	TinyLanguageLexerSubtract      = 31
	TinyLanguageLexerMult          = 32
	TinyLanguageLexerDivide        = 33
	TinyLanguageLexerMod           = 34
	TinyLanguageLexerGT            = 35
	TinyLanguageLexerLT            = 36
)
